@using ctorx.Core.Primitives
@model RecipeMashStepViewModel



<div class="panel panel-info panel-ingredient" data-datarow="1">
    <div class="panel-heading">
        <div class="row">
            <section class="col-xs-9">
                <span data-name="m_Name" class="ingName @(Model.IsCustom() ? "hidden" : "")">@Model.Name.WhenNull("{{=Name}}")</span>
                @if (ViewBag.IsVew) {
                <span class="recipe-field-view">@Model.CustomName</span>
                }
                else
                {
            <input type="text" data-name="m_CustomName" data-track="1" placeholder="Enter Mash Step" class="customname @(!Model.IsCustom() ? "hidden" : "") form-control input-sm" data-validate="1" value="@Model.CustomName" />
}
            </section>
            <section class="col-xs-3">
                @if (!ViewBag.IsVew)
                {
            <div class="pull-right">
                <img src="@Url.Content("~/img/icons/arrow_ns.png")" data-name="sort" tabindex="-1" alt="" title="Drag to Sort" />
                <img src="@Url.Content("~/img/icons/delete.png")" data-name="remove" title="Remove" />
            </div>
                }
            </section>
        </div>
    </div>
    <div class="panel-body ingredient-panel-body">
        <div class="row">
            <input type="hidden" data-name="m_Id" data-track="1" value="@Model.Id.WhenNull("{{=Id}}")" />
            <input type="hidden" data-name="m_IngId" data-track="1" value="@Model.IngId.WhenNull("{{=IngId}}")" />
            <input type="hidden" data-name="m_Rank" data-track="1" value="@Model.Rank.WhenNull("{{=RankId}}")" />
            <section class="col-xs-4">
                <div class="form-group">
                    <label>heat</label>
                    @if (ViewBag.IsVew)
    {
                    <span class="recipe-field-view">@Model.Heat</span>
}
else
{
                    <select data-name="m_Heat" data-track="1" class="form-control input-sm">
                        <option value="Decoction" @(Model.Heat == "Decoction" ? " selected=\"selected\"" : "")>Decoction</option>
                        <option value="Direct Heat" @(Model.Heat == "Direct Heat" ? " selected=\"selected\"" : "")>Direct Heat</option>
                        <option value="Infusion" @(Model.Heat == "Infusion" ? " selected=\"selected\"" : "")>Infusion</option>
                    </select>
}
                    
                </div>
            </section>
            <section class="col-xs-4">
                <div class="form-group">
                    <label>
                        <span data-unit="s">temp &deg;F</span>
                        <span data-unit="m">temp &deg;C</span>
                    </label>
                    @if (ViewBag.IsVew)
    {
                    <span class="recipe-field-view">@Model.Temp.WhenNull("{{=Temp}}")</span>
}
else
{
                <input type="text" data-name="m_Temp" data-track="1" data-validate="1" data-filter="positiveFloat" value="@Model.Temp.WhenNull("{{=Temp}}")" class="form-control input-sm" />
}
                    
                </div>
            </section>
            <section class="col-xs-4">
                <div class="form-group">
                    <label>time</label>
                    @if (ViewBag.IsVew)
    {
                <span class="recipe-field-view">@Model.Time min</span>
}
else
{
                <select data-name="m_Time" data-track="1" class="form-control input-sm">
                    @for (var i = 0; i <= 180; i++)
    {
                <option value="@i" @(Model.Time == i.ToString() ? " selected=\"selected\"" : "")>@i min</option>
}
                </select>
}
                    
                </div>
            </section>
        </div>
    </div>
</div>