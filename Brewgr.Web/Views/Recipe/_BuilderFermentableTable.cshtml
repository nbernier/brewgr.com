@using System.Linq;
@using Brewgr.Web
@using Brewgr.Web.Core.Model
@using System
@using System.Collections.Generic
@using System.Linq
@using System.Web


@model IList<RecipeFermentableViewModel>

@{
    RecipeCreationOptions options = ViewBag.RecipeCreationOptions;
}
<div class="groupbox">
    <span><h3 class="floatleft">Fermentables</h3>
        <div class="floatright">
            <select id="fermentable-list" data-trigger="f">
                <option value="" data-image="/img/pixel.gif" data-imagecss="lovibond addfirst">Add Fermentables...</option>
                <option value="0" data-image="/img/pixel.gif" data-use="Mash" data-ppg="0" data-l="0" data-imagecss="lovibond addcustom">Add Custom Ingredient</option>
                @foreach (Fermentable fermentable in ViewBag.RecipeCreationOptions.Fermentables)
                {
                    var cssClass = options.SendToShopSettings.IsEnabled ? options.SendToShopSettings.IngredientIsEnabled(fermentable) ? "partner-ing-yes" : "partner-ing-no" : "";
                    <option  class="@cssClass" value="@fermentable.IngredientId" data-ppg="@fermentable.Ppg" data-l="@fermentable.Lovibond" data-use="@(((FermentableUsageType)fermentable.DefaultUsageTypeId).ToString())" data-image="/img/pixel.gif" data-imagecss="lovibond L@((fermentable.Lovibond > 41) ? 41 : fermentable.Lovibond)">@fermentable.Name</option>    
                }
            </select>
        </div>
    </span>
    <div class="nopadding">
        <table data-name="f_table" class="dataTable">
            <thead class="@(!Model.Any() ? "builder-hidden" : "")">
                <tr>
                    <td><span data-name="f_per">%</span></td>
                    <td><span data-unit="s">lb</span><span data-unit="m">kg</span></td>
                    <td>fermentable</td>
                    <td>ppg <span class="helptip" original-title="PPG: Points per pound per gallon - This is the gravity points that you would get if you extracted 100% of the sugars from a pound of this malt into a gallon of water.  For extract brewers adding your own ingredients, use 32 if you aren't sure.">&nbsp;</span></td>
                    <td>L <span class="helptip" original-title="Degrees Lovibond is a measurement of the color that a malt or sugar will contribute to a batch of homebrew beer">&nbsp;</span></td>
                    <td>usage <span class="helptip" original-title="Indicates how the fermentable is used.  All grain brewers will typically select mash while extract brewers will typically select extract or steep.  For fermentables added late in the boil such as sugar, select late.">&nbsp;</span></td>
                    <td>remove</td>
                </tr>
            </thead>
            <tbody>
                @if(!Model.Any())
                {
                    <tr class="introrow">
                        <td colspan="8">
                            <span class="starthere"><img src="@Url.Image("~/img/start-here.gif")" alt="Start Here" /></span>
                            <img src="@Url.Content("~/img/malted-grain.png")" width="100" height="100" alt="Malted Grain" />
                            <div class="content">
                                <h4>Add Extracts, Malted Grains or Other Fermentables</h4>
                                Fermentables are sugary foods that yeast eat to produce alcohol and carbon dioxide. Malted grains also play a key role in adding flavor and color to your home
                                brew.
                            </div>
                        </td>
                    </tr>
                }
                else
                {
                    foreach(var fermentable in Model)
                    {
                        @Html.Partial("_BuilderFermentableRow", fermentable)
                    }
                }
            </tbody>
            <tfoot class="@(!Model.Any() ? "builder-hidden" : "")">
                <tr>
                    <td></td>
                    <td colspan="2" class="alignleft paddingleft25">
                        <span data-name="f_Total">@Model.Select(x => double.Parse(x.Amt)).Sum()</span>
                        <span data-unit="s">lb</span>
                        <span data-unit="m">kg</span>
                    </td>
                    <td colspan="4"></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
