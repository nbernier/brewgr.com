@using Brewgr.Web
@model IRecipeFactsViewModel

@{
    var recipeDisplayName = !string.IsNullOrWhiteSpace(Model.Name) ? (Model.Name.Length > 50 ? Model.Name.Substring(0, 50) + "..." : Model.Name) : "Give Your Homebrew a Name";
}

<div class="facts" itemprop="nutrition" itemscope itemtype="http://schema.org/NutritionInformation">
	<div class="first block">
		<div class="color" style="background-color: #FFFFFF;"></div>
		<h3 class="upper">Recipe Facts</h3>
	    <div data-name="recipe-name">        
            @recipeDisplayName
	        <div data-name="facts_stylename">@(!string.IsNullOrWhiteSpace(Model.StyleId) ? Model.StyleName : "")</div>
	    </div>
	</div>
	<div class="block second">
		<div>
			<label>Batch Size</label>
		    <span data-name="facts_batchsize">@(Model.BatchSize <= 0 ? "5.00" : Model.BatchSize.ToString("F2"))</span>
            <span data-unit="s">Gallons</span>
            <span data-unit="m">Liters</span>
		</div>
		<div>
			<label>Boil Size</label>
		    <span data-name="facts_boilsize">@(Model.BoilSize <= 0 ? "6.50" : Model.BoilSize.ToString("F2"))</span>
            <span data-unit="s">Gallons</span>
		    <span data-unit="m">Liters</span>
		    <span>&nbsp;@@&nbsp;</span> 
            <span data-name="facts_boiltime">@(Model.BoilTime <= 0 ? "0" : Model.BoilTime.ToString())</span>
            <span>&nbsp;min</span>
		</div>
	</div>
    <div class="block">
		<div>
			<label>OG</label>
			<span data-name="facts_og">@(Model.Og <= 0 ? "1.000" : Model.Og.ToString("F3"))</span>
		</div>
		<div>
			<label>FG</label>
			<span data-name="facts_fg">@(Model.Fg <= 0 ? "1.000" : Model.Fg.ToString("F3"))</span>
		</div>
        <div>
			<label>Color</label>
			<span data-name="facts_srm">@(Model.Srm <= 0 ? "0.0" : Model.Srm.ToString("F1"))</span><span>&deg; SRM</span>
		</div>
        <div>
			<label>Efficiency</label>
			<span data-name="facts_efficiency">@(Model.Efficiency <= 0 ? "0" : (Model.Efficiency * 100).ToString())%</span>
		</div>
    </div>
	<div class="block">
		<div>
			<label>Bitterness</label>
			<span data-name="facts_ibu">@(Model.Ibu <= 0 ? "0.0" : Model.Ibu.ToString("F1"))</span><span data-name="facts_ibuformula">&nbsp;IBU (@Model.GetIbuFormulaName().ToLower())</span>	
		</div>
		<div>
			<label>BG:GU</label>
			<span data-name="facts_bggu">@(Model.BgGu.ToString("F2"))</span>	
		</div>
    </div>
    <div class="block">
        <div>
            <label>Alcohol</label>
            <span data-name="facts_abv">@(Model.Abv <= 0 ? "0" : Model.Abv.ToString("F1"))</span><span>% ABV</span>
        </div>
        <div>
            <label>Calories</label>
            <span data-name="facts_cal"><span itemprop="calories">@(Model.Calories <= 0 ? "0" : Model.Calories.ToString())</span></span><span>&nbsp;per 12oz</span>
        </div>
    </div>

    <div class="last">
        @if (!Model.IsNewRecipe())
        {
            <a href="@Url.RecipeBeerXmlUrl(Model.RecipeId)"><img src="@Url.Image("~/img/xml.gif")" width="40" height="20" alt="Beer Xml" /></a>
        }
        <a href="@Url.Action("Calculations", "content", null, "http")"class="calculations" data-showinmodal="@((ViewData["ShowInModal"] == null || (ViewData["ShowInModal"] != null && Convert.ToBoolean(ViewData["ShowInModal"]))) ? 1 : 0)" class="floatright margintop2">How are these calculations made?</a>
        <div class="clearall"></div>
    </div>
</div>
